{"version":3,"sources":["components/Album.js","components/Appbar.js","components/Footer.js","components/Hero.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","Album","classes","useState","cards","setCards","useEffect","a","async","fetch","response","json","data","pictures","splice","reverse","fetchData","Fragment","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardMedia","image","Image","title","Datestring","CardContent","Typography","gutterBottom","variant","component","Timestring","Temperature","CardActions","Button","size","color","icon","marginRight","Appbar","AppBar","position","Toolbar","noWrap","Copyright","align","Link","href","Footer","heroContent","heroButtons","marginTop","openURL","window","open","Hero","paragraph","justify","onClick","createMuiTheme","primary","main","secondary","amber","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b1c3c04.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '70%', \r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  async function fetchData() {\r\n    const url = \"https://maartenderijk.github.io/sitegenerator/snapshots.json\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const pictures = data.splice(-24).reverse();\r\n    setCards(pictures);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          {cards.map((card, index) => (\r\n            <Grid item key={index} xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={card.Image}\r\n                  title={card.Datestring}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {card.Datestring}\r\n                  </Typography>\r\n                  <Typography>\r\n                    Time: {card.Timestring} <br />\r\n                    Temperature: {card.Temperature}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    View\r\n                    </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Appbar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <ComputerIcon className={classes.icon} />\r\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n          Raspberry Pi Snapshots\r\n          </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    <Toolbar/>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Build with '}\r\n      <Link color=\"inherit\" href=\"https://reactjs.org/\">\r\n        React\r\n      </Link>{' & '}\r\n\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Material - ui Â©\r\n      </Link>{' '}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        By Maarten de Rijk - 2020\r\n      </Typography>\r\n      <Copyright />\r\n    </footer>\r\n  )\r\n\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 3),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction openURL() {\r\n  window.open( \r\n    \"https://github.com/maartenderijk?tab=repositories\", \"_blank\"); \r\n}\r\n\r\nexport default function Hero() {\r\n  const classes = useStyles();\r\n  return (\r\n\r\n    <div className={classes.heroContent}>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          Snapshots\r\n            </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          One picture a day from my Raspberry Pi.\r\n          This site updates automatically.\r\n            </Typography>\r\n        <div className={classes.heroButtons}>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={openURL}>\r\n                Open Github\r\n              </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport Album from './Album';\nimport Appbar from './Appbar'\nimport Footer from './Footer'\nimport Hero from './Hero'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#66bb6a',\n    },\n    secondary: amber,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <CssBaseline />\n      <Appbar />\n      <Hero />\n      <Album />\n      <Footer />\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}