{"ast":null,"code":"import _slicedToArray from \"C:\\\\Dev\\\\homepage_react\\\\homepage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Dev\\\\homepage_react\\\\homepage\\\\src\\\\components\\\\Album.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport SimpleModal from './PictureView';\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '70%'\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function Album() {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  async function fetchData() {\n    const url = \"https://maartenderijk.github.io/pi_projects/snapshots.json\";\n    const response = await fetch(url);\n    const data = await response.json();\n    const pictures = data.splice(-24).reverse();\n    setCards(pictures);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: classes.cardGrid,\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, cards.map((card, index) => React.createElement(Grid, {\n    item: true,\n    key: index,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: card.Image,\n    title: card.Datestring,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, card.Datestring), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Time: \", card.Timestring, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"Temperature: \", card.Temperature)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(SimpleModal, {\n    img: card.Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))))))));\n}","map":{"version":3,"sources":["C:/Dev/homepage_react/homepage/src/components/Album.js"],"names":["React","useState","useEffect","Card","CardActions","CardContent","CardMedia","Grid","Typography","makeStyles","Container","SimpleModal","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","Album","classes","cards","setCards","fetchData","url","response","fetch","data","json","pictures","splice","reverse","map","index","Image","Datestring","Timestring","Temperature"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SimpleModal from './PictureView';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '70%', \r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  async function fetchData() {\r\n    const url = \"https://maartenderijk.github.io/pi_projects/snapshots.json\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const pictures = data.splice(-24).reverse();\r\n    setCards(pictures);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          {cards.map((card, index) => (\r\n            <Grid item key={index} xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={card.Image}\r\n                  title={card.Datestring}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {card.Datestring}\r\n                  </Typography>\r\n                  <Typography>\r\n                    Time: {card.Timestring} <br />\r\n                    Temperature: {card.Temperature}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <SimpleModal img={card.Image} />\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}